<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apibot | Write integration tests for your API</title>
    <link>http://apibot.co/apibot-docs/</link>
    <description>Recent content on Apibot | Write integration tests for your API</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Jul 2017 00:25:24 +0200</lastBuildDate>
    
	<atom:link href="http://apibot.co/apibot-docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Assert</title>
      <link>http://apibot.co/apibot-docs/graphs/assert/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/assert/</guid>
      <description> Description Performs an assertion over the scope.
Arguments A javascript function which takes the scope as argument and returns true or false.
Example: Checking that the scope contains a specific key.
(scope) =&amp;gt; { return scope.username !== null; }  Example: Checking that the scope contains a specific value.
(scope) =&amp;gt; { return scope.user === {id: &amp;quot;12345&amp;quot;, name: &amp;quot;Bob&amp;quot;}; }  </description>
    </item>
    
    <item>
      <title>Assert Body</title>
      <link>http://apibot.co/apibot-docs/graphs/assert-body/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/assert-body/</guid>
      <description> Description Performs an assertion over the last HTTP request&amp;rsquo;s body.
Arguments A javascript function which takes the HTTP response&amp;rsquo;s body and the scope as argument and returns true or false.
Example: Checking that the body contains a specific key.
(body, scope) =&amp;gt; { return body.user_id !== null; }  Example: Checking that the body contains a specific value.
(body, scope) =&amp;gt; { return body.user.id === scope.userId; }  </description>
    </item>
    
    <item>
      <title>Assert Headers</title>
      <link>http://apibot.co/apibot-docs/graphs/assert-headers/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/assert-headers/</guid>
      <description>Description Performs an assertion over the last HTTP request&amp;rsquo;s headers.
Arguments A javascript function which takes the HTTP response&amp;rsquo;s headers and the scope as argument and returns true or false.
The headers are represented as a map from header key to header value.
Example: Checking that the server returned a specific header:
(headers, scope) =&amp;gt; { return headers[&amp;quot;x-auth-token&amp;quot;] !== null; }  Example: Checking that the server returned a header with a specific value:</description>
    </item>
    
    <item>
      <title>Assert Status</title>
      <link>http://apibot.co/apibot-docs/graphs/assert-status/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/assert-status/</guid>
      <description>Description The Assert Status is a type of assertion that verifies the HTTP status code of the last HTTP Response. The graph&amp;rsquo;s execution will be halted if any of the following conditions occur:
 The Http Response&amp;rsquo;s status is not in the range of from &amp;lt;= status &amp;lt;= to. There is no Http Response in the scope.  Arguments  from: The lower bound HTTP status code. to: The upper bound HTTP status code.</description>
    </item>
    
    <item>
      <title>Config</title>
      <link>http://apibot.co/apibot-docs/graphs/config/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/config/</guid>
      <description> Description Sets text variables in the scope.
Arguments A list of key-value pairs. The config node will set each key-value pair into the scope.
Example: Setting your initial configuration variables.
The following configuration
Will result in the following scope
{ url: &amp;quot;https://myapi.co/api/3&amp;quot;, username: &amp;quot;billybob&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Eval JS</title>
      <link>http://apibot.co/apibot-docs/graphs/evaljs/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/evaljs/</guid>
      <description>Description Invokes a javascript function. The result of the invocation will be the new scope.
Arguments A javascript function which takes the current scope as argument and returns the new scope.
If you don&amp;rsquo;t return anything, Apibot will assume that you returned an empty map! So always remember to return the resulting scope.
 Example: Setting a &amp;ldquo;random&amp;rdquo; email in the scope.
(scope) =&amp;gt; { const millis = Date.now(); scope.</description>
    </item>
    
    <item>
      <title>Extract Body</title>
      <link>http://apibot.co/apibot-docs/graphs/extract-body/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/extract-body/</guid>
      <description>Description Takes a value in the body of the last HTTP request and places it in the scope.
Arguments Property Name: The name that will be given to the extracted contents inside the scope.
Function: A javascript function which takes the body as argument and returns anything.
Example: extracting an authentication token from the body. If the name is &amp;ldquo;token&amp;rdquo; and the functions is set as follows:
(body) =&amp;gt; { return body.</description>
    </item>
    
    <item>
      <title>Extract Header</title>
      <link>http://apibot.co/apibot-docs/graphs/extract-header/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:24 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/extract-header/</guid>
      <description> Description Takes a header last HTTP request and places it in the scope.
Arguments Property Name: The name that will be given to the extracted header inside the scope.
Header Name: The name of the http header.
Example: extracting the APIs version assuming an API that returns versions as headers.
Will result in the following scope:
{ /* ... */ version: &amp;quot;&amp;lt;some API version&amp;gt;&amp;quot; }  </description>
    </item>
    
    <item>
      <title>Http Request</title>
      <link>http://apibot.co/apibot-docs/graphs/http-request/</link>
      <pubDate>Thu, 13 Jul 2017 00:25:17 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/graphs/http-request/</guid>
      <description>Description The &amp;ldquo;Http Request node&amp;rdquo; makes an HTTP request and appends both the Http Request and Http Response to the scope. If an Http Request/Response was already in the scope, it will be overriden.
Arguments  Url: The HTTP request&amp;rsquo;s URL. Example: https://swapi.co/api/people/1. This value is templateable e.g. you can use ${root}/api/people/1 if the variable root is defined in the scope. Method: The HTTP method, e.g. GET Body: The request&amp;rsquo;s body, also sometimes called payload.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>http://apibot.co/apibot-docs/tutorials/getting-started/</link>
      <pubDate>Wed, 12 Jul 2017 23:08:38 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/tutorials/getting-started/</guid>
      <description>What is Apibot Apibot is a powerful tool for interacting with REST based APIs. If you need to write integration tests for your REST API and don&amp;rsquo;t know how, you&amp;rsquo;ve come to the right place.
The purpose of this tutorial is to write a simple program that gets some information from SWAPI (the Star Wars API) and then performs some assertions to make sure that everything works as expected.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>http://apibot.co/apibot-docs/concepts/</link>
      <pubDate>Wed, 12 Jul 2017 22:58:01 +0200</pubDate>
      
      <guid>http://apibot.co/apibot-docs/concepts/</guid>
      <description>In order to properly use Apibot you will need to understand a handful of concepts. Don&amp;rsquo;t worry it&amp;rsquo;s not rocket science ðŸ˜‰. You don&amp;rsquo;t need to memorize them, but just realize that you can always come back to this page when you forget what something means.
Graph A graph is a program written with Apibot. Graphs in Apibot are directed, acyclic and should always have a single starting point:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://apibot.co/apibot-docs/_header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://apibot.co/apibot-docs/_header/</guid>
      <description> apibot </description>
    </item>
    
  </channel>
</rss>